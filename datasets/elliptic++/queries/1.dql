# Auxiliary query:
# {
#   transactions as var(func: has(successors)) {
#     successorsCount as count(successors)
#   }
#   
#   result(func: uid(transactions), orderdesc: val(successorsCount), first: 1) {
#     id
#     val(successorsCount)
#   }
# }

# NOTE: id=2984918 has the biggest number of outcoming edges: 472.
{
  result(func: eq(id, 2984918)) @recurse(depth: 50) {
    uid
    successors @filter(lt(Time_step, 25))
  }
}
